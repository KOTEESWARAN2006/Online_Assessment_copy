//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Online_Assessment
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Online_AssessmentEntities : DbContext
    {
        public Online_AssessmentEntities()
            : base("name=Online_AssessmentEntities")
        {
            this.Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Admin_table> Admin_table { get; set; }
        public DbSet<Answer_table> Answer_table { get; set; }
        public DbSet<Difficulty_table> Difficulty_table { get; set; }
        public DbSet<Option_table> Option_table { get; set; }
        public DbSet<Question_mapping_table> Question_mapping_table { get; set; }
        public DbSet<Question_table> Question_table { get; set; }
        public DbSet<Subject_table> Subject_table { get; set; }
        public DbSet<Test_invitation_table> Test_invitation_table { get; set; }
        public DbSet<Test_table> Test_table { get; set; }
        public DbSet<User_table> User_table { get; set; }
    
        public virtual ObjectResult<Get_questions_Result> Get_questions(Nullable<int> subject_id, Nullable<int> difficulty_id)
        {
            var subject_idParameter = subject_id.HasValue ?
                new ObjectParameter("Subject_id", subject_id) :
                new ObjectParameter("Subject_id", typeof(int));
    
            var difficulty_idParameter = difficulty_id.HasValue ?
                new ObjectParameter("Difficulty_id", difficulty_id) :
                new ObjectParameter("Difficulty_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_questions_Result>("Get_questions", subject_idParameter, difficulty_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Find_exist_testid(Nullable<int> test_id)
        {
            var test_idParameter = test_id.HasValue ?
                new ObjectParameter("test_id", test_id) :
                new ObjectParameter("test_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Find_exist_testid", test_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Get_mapped_questionIds(Nullable<int> test_id)
        {
            var test_idParameter = test_id.HasValue ?
                new ObjectParameter("test_id", test_id) :
                new ObjectParameter("test_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Get_mapped_questionIds", test_idParameter);
        }
    
        public virtual int Delete_existing_questionIds(Nullable<int> test_id)
        {
            var test_idParameter = test_id.HasValue ?
                new ObjectParameter("test_id", test_id) :
                new ObjectParameter("test_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_existing_questionIds", test_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Find_email(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Find_email", emailParameter);
        }
    
        public virtual ObjectResult<Get_invited_testlist_Result> Get_invited_testlist(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_invited_testlist_Result>("Get_invited_testlist", emailParameter);
        }
    
        public virtual ObjectResult<Get_invited_users_list_Result> Get_invited_users_list(Nullable<int> test_id)
        {
            var test_idParameter = test_id.HasValue ?
                new ObjectParameter("Test_id", test_id) :
                new ObjectParameter("Test_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_invited_users_list_Result>("Get_invited_users_list", test_idParameter);
        }
    
        public virtual ObjectResult<Options_for_livetest_Result> Options_for_livetest(Nullable<int> question_id)
        {
            var question_idParameter = question_id.HasValue ?
                new ObjectParameter("question_id", question_id) :
                new ObjectParameter("question_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Options_for_livetest_Result>("Options_for_livetest", question_idParameter);
        }
    
        public virtual ObjectResult<Questions_for_livetest_Result> Questions_for_livetest(Nullable<int> question_id)
        {
            var question_idParameter = question_id.HasValue ?
                new ObjectParameter("question_id", question_id) :
                new ObjectParameter("question_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Questions_for_livetest_Result>("Questions_for_livetest", question_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Get_only_questionids(Nullable<int> test_id)
        {
            var test_idParameter = test_id.HasValue ?
                new ObjectParameter("Test_id", test_id) :
                new ObjectParameter("Test_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Get_only_questionids", test_idParameter);
        }
    
        public virtual ObjectResult<Get_result_for_admin_Result> Get_result_for_admin(Nullable<int> test_id)
        {
            var test_idParameter = test_id.HasValue ?
                new ObjectParameter("test_id", test_id) :
                new ObjectParameter("test_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_result_for_admin_Result>("Get_result_for_admin", test_idParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> get_result_for_user(Nullable<int> test_id, Nullable<int> user_id)
        {
            var test_idParameter = test_id.HasValue ?
                new ObjectParameter("test_id", test_id) :
                new ObjectParameter("test_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("get_result_for_user", test_idParameter, user_idParameter);
        }
    }
}
